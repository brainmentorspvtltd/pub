{"version":3,"sources":["logo.svg","components/Header.js","components/product.js","components/products.js","utils/config.js","models/itemoperations.js","containers/shop.js","components/nav.js","components/AboutUs.js","components/Search.js","components/Sort.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Product","_React$Component","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","style","width","src","item","url","alt","name","price","href","React","Component","Products","items","map","itemObject","index","product_Product","Config","itemOperations","fillItems","Shop","_this","state","console","log","_this2","fetch","then","response","json","data","setState","products_Products","Nav","height","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","activeClassName","to","AboutUs","Search","placeholder","Sort","App","Header_Header","nav_Nav","Search_Search","Sort_Sort","Switch","Route","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","BrowserRouter","basename","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bb703e87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nexport const Header=()=>{\n    return (\n        <div>\n            <h4 className=\"alert-success text-center\">Online Shop</h4>\n        </div>\n    );\n}","import React from 'react';\nexport class Product extends React.Component{\nconstructor(props){\n    super(props);\n}\nrender(){\n    const myStyle = {\n        width : '18rem'\n    };\n    return(\n        <div className='row'>\n        <div className='col-sm-4'>    \n        <div className=\"card\" style={myStyle}>\n            <img className=\"card-img-top\" src={this.props.item.url} alt=\"Card image cap\"/>\n            <div className=\"card-body\">\n            <h5 className=\"card-title\">{this.props.item.name}</h5>\n            <p className=\"card-text\">{this.props.item.price}</p>\n            <a href=\"#\" className=\"btn btn-primary\">Add to Cart</a>\n            </div>\n        </div>\n        </div>\n        <div className='col-sm-8'>\n            <section>Product Name {this.props.item.name}</section>\n        </div>\n        </div>\n    )\n}\n}","import React from 'react';\nimport {Product} from './product';\nexport const Products=(props)=>{\n    return(\n        <div>\n           {props.items?props.items.map((itemObject,index)=><Product key={index} item={itemObject}/>):'No Products'}; \n            \n        </div>\n    )\n}","export const Config = {\n    url :'https://raw.githubusercontent.com/brainmentorspvtltd/myserverdata/master/mobiles.json'\n}","import {Config} from '../utils/config';\nexport const itemOperations={\n    items:[],\n    fillItems(){\n        \n    }\n}","import React from 'react';\nimport {Products} from '../components/products';\nimport {Config} from '../utils/config';\nimport {itemOperations} from '../models/itemoperations';\nexport class Shop extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\"items\":[]};\n        console.log(\"Constructor Call \",this.state.items);\n    }\n    componentDidMount () {\n        console.log(\"Component Did Mount Call\",this.state.items);\n        fetch(Config.url).then(response=>{\n            response.json().then(data=>{\n                itemOperations.items = data['mobiles'];\n                console.log(\"Items are::::: \",data['mobiles']);\n                this.setState({\"items\":itemOperations.items});\n                \n            })\n        })\n    }\n    \n\n    render(){\n        return(\n            <Products items={this.state.items}/>\n        )\n    }\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nexport const Nav = (props)=>{\n    return(\n        \n    \n\n<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n<a className=\"navbar-brand\" href=\"#\">\n    <img src=\"https://www.svgimages.com/svg-image/s7/amazon-logo-256x256.png\" width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\"/>\n    Shopping\n  </a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item active\">\n      <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/\">Items <span className=\"sr-only\">(current)</span></NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/about\">AboutUs</NavLink>\n      </li>\n      </ul>\n        </div>\n</nav>\n    )\n}","import React from 'react';\nexport const AboutUs=()=>{\n    return (\n        <div>\n            <h1>About Us</h1>\n        </div>\n    )\n}","import React from 'react';\nexport const Search=(props)=>{\nreturn(\n    <div className=\"form-group\">\n        <input type=\"text\" className=\"form-control\" placeholder=\"Type to Search\"/>\n        <button className=\"btn btn-primary\">Search</button>\n        </div>\n)\n}","import React from 'react';\nexport const Sort=(props)=>{\nreturn(\n    <div className=\"form-group\">\n        <select className=\"form-control\" >\n        <option>Choose Sort</option>\n            <option>Sort By Price</option>\n            <option>Sort By Name</option>\n        </select>\n        </div>\n)\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {Header} from './components/Header';\nimport { Shop } from './containers/shop';\nimport {Nav} from './components/nav';\nimport {AboutUs} from './components/AboutUs';\nimport {Switch,Route} from 'react-router-dom';\nimport {Search} from './components/Search';\nimport {Sort} from './components/Sort';\nclass App extends Component {\n  render() {\n    return (\n      <div className='container'> \n        <Header/>\n        <Nav/>\n        <div className=\"row\"> \n          <div className=\"col-sm-6\">\n          <Search/>\n          </div>\n          <div className=\"col-sm-6\">\n          <Sort/>\n          </div>\n        \n        </div>\n        <Switch>\n        \n        <Route path=\"/\" exact component={Shop}/>\n        <Route path=\"/about\"  exact component={AboutUs}/>\n      </Switch>\n       \n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter basename=\"/pub\"><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}